name: Build, Test and Publish Reports

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: checkout
    - uses: actions/checkout@v2
    
    - name: dotnet setup
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 7.0.x
    
    - name: cache SonarCloud packages
      uses: actions/cache@v1
      with:
        path: ~\sonar\cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
        
    - name: cache SonarCloud scanner
      id: cache-sonar-scanner
      uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      
    - name: install SonarCloud scanner
      if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
      run: dotnet tool update dotnet-sonarscanner --tool-path ./.sonar/scanner
    
    - name: dotnet restore
      run: dotnet restore

    - name: dotnet build
      run: dotnet build --no-restore
    
    - name: test and analyze
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        ./.sonar/scanner/dotnet-sonarscanner begin /k:"Project-key" /o:"user" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
        dotnet test --no-build --no-restore /p:CollectCoverage=true /p:CoverletOutputFormat=opencover -l trx
        ./.sonar/scanner/dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"